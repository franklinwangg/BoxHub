{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Desktop\\\\Projects\\\\Boxing Forum Website\\\\client\\\\src\\\\components\\\\Posts\\\\Post\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Comment from '../Comment/Comment';\nimport UserContext from '../../../context/UserContext';\nimport \"./Post.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = () => {\n  _s();\n  const location = useLocation();\n  const [comments, setComments] = useState([]);\n  const {\n    username,\n    setUsername\n  } = useContext(UserContext);\n  const [commentToPost, setCommentToPost] = useState(\"\");\n  const [isReadyToRender, setIsReadyToRender] = useState(false);\n  const renderComment = comment => {\n\n    // return (\n    //     // <Comment />\n    //     <Comment post={location.state._id} author={comment.author} comment={comment.comment} level={comment.level} id={comment._id} \n    //     handleReplySubmission = {handleReplySubmission}/>\n\n    // );\n  };\n  const renderComments = () => {\n    // if (comments.length === 0) {\n    //     // console.log(\"no comments available to render yet\");\n    // }\n    // else {\n    //     const overallRenderedComments = [];\n    //     const levelArrays = divideCommentsIntoLevelArrays();\n\n    //     for (let i = 0; i < levelArrays[0].length; i++) {\n    //         const arrayOfRecursiveElementsHTML = renderEachLevel(levelArrays, levelArrays[0][i], 0);\n    //         for (let j = 0; j < arrayOfRecursiveElementsHTML.length; j++) {\n    //             overallRenderedComments.push(\n    //                 React.cloneElement(arrayOfRecursiveElementsHTML[j], { key: arrayOfRecursiveElementsHTML[j].props.id })\n    //             );\n    //         }\n    //     }\n\n    //     return overallRenderedComments;\n    // }\n\n    console.log(\"Location state : \", location.state);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"post-title-and-description-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"post-title-div\",\n        children: location.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: isReadyToRender ? renderComments() : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading comments...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"x2Df9UZEo9TvNlOkhho03JdDhNI=\", false, function () {\n  return [useLocation];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useLocation","Comment","UserContext","jsxDEV","_jsxDEV","Post","_s","location","comments","setComments","username","setUsername","commentToPost","setCommentToPost","isReadyToRender","setIsReadyToRender","renderComment","comment","renderComments","console","log","state","children","id","title","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/frank/Desktop/Projects/Boxing Forum Website/client/src/components/Posts/Post/Post.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Comment from '../Comment/Comment';\r\nimport UserContext from '../../../context/UserContext';\r\nimport \"./Post.css\";\r\n\r\n\r\nconst Post = () => {\r\n\r\n    const location = useLocation();\r\n    const [comments, setComments] = useState([]);\r\n\r\n    const { username, setUsername } = useContext(UserContext);\r\n    const [commentToPost, setCommentToPost] = useState(\"\");\r\n    const [isReadyToRender, setIsReadyToRender] = useState(false);\r\n\r\n\r\n\r\n    const renderComment = (comment) => {\r\n\r\n        // return (\r\n        //     // <Comment />\r\n        //     <Comment post={location.state._id} author={comment.author} comment={comment.comment} level={comment.level} id={comment._id} \r\n        //     handleReplySubmission = {handleReplySubmission}/>\r\n\r\n        // );\r\n\r\n    };\r\n\r\n    const renderComments = () => {\r\n        // if (comments.length === 0) {\r\n        //     // console.log(\"no comments available to render yet\");\r\n        // }\r\n        // else {\r\n        //     const overallRenderedComments = [];\r\n        //     const levelArrays = divideCommentsIntoLevelArrays();\r\n\r\n\r\n        //     for (let i = 0; i < levelArrays[0].length; i++) {\r\n        //         const arrayOfRecursiveElementsHTML = renderEachLevel(levelArrays, levelArrays[0][i], 0);\r\n        //         for (let j = 0; j < arrayOfRecursiveElementsHTML.length; j++) {\r\n        //             overallRenderedComments.push(\r\n        //                 React.cloneElement(arrayOfRecursiveElementsHTML[j], { key: arrayOfRecursiveElementsHTML[j].props.id })\r\n        //             );\r\n        //         }\r\n        //     }\r\n\r\n        //     return overallRenderedComments;\r\n        // }\r\n\r\n        console.log(\"Location state : \", location.state);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div id=\"post-title-and-description-section\">\r\n                <div id=\"post-title-div\">{location.state.title}</div>\r\n                {/* <div id=\"post-description-div\">{location.state.content}</div> */}\r\n            </div>\r\n\r\n\r\n            <div className=\"comments-section\">\r\n                {isReadyToRender ? renderComments() : <p>Loading comments...</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Post;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM;IAAEa,QAAQ;IAAEC;EAAY,CAAC,GAAGZ,UAAU,CAACG,WAAW,CAAC;EACzD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAI7D,MAAMmB,aAAa,GAAIC,OAAO,IAAK;;IAE/B;IACA;IACA;IACA;;IAEA;EAAA,CAEH;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzB;IACA;IACA;IACA;IACA;IACA;;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEb,QAAQ,CAACc,KAAK,CAAC;EACpD,CAAC;EAED,oBACIjB,OAAA;IAAAkB,QAAA,gBAEIlB,OAAA;MAAKmB,EAAE,EAAC,oCAAoC;MAAAD,QAAA,eACxClB,OAAA;QAAKmB,EAAE,EAAC,gBAAgB;QAAAD,QAAA,EAAEf,QAAQ,CAACc,KAAK,CAACG;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpD,CAAC,eAGNxB,OAAA;MAAKyB,SAAS,EAAC,kBAAkB;MAAAP,QAAA,EAC5BR,eAAe,GAAGI,cAAc,CAAC,CAAC,gBAAGd,OAAA;QAAAkB,QAAA,EAAG;MAAmB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGd,CAAC;AAAAtB,EAAA,CA7DKD,IAAI;EAAA,QAEWL,WAAW;AAAA;AAAA8B,EAAA,GAF1BzB,IAAI;AA+DV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}