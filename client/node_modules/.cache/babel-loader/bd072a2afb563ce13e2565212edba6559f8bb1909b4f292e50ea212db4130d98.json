{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Desktop\\\\Projects\\\\Boxing Forum Website\\\\client\\\\src\\\\components\\\\Posts\\\\Comment\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport \"./Comment.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = props => {\n  _s();\n  // {post, author, comment, level, id }\n  console.log(props.post);\n  console.log(\"comment \", props.comment);\n  console.log(\"id \", props.id);\n  const [replyCommentToPost, setReplyCommentToPost] = useState(\"\");\n  const handleReplyToCommentButton = () => {\n    const postId = props.post;\n    const commentId = props.id;\n    console.log(\"post Id \", postId);\n    console.log(\"comment Id \", commentId);\n    fetch(`http://localhost:3001/post/${postId}/${commentId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // Add other headers here if necessary, like Authorization\n      },\n      body: JSON.stringify({\n        author: props.author,\n        comment: replyCommentToPost,\n        parentPost: props.parentPost,\n        idOfParentPost: props.post,\n        level: props.level + 1,\n        idOfParentComment: props.id\n      })\n    });\n  };\n  const changeReplyCommentToPost = event => {\n    setReplyCommentToPost(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: props.level * 20 + 'px',\n      marginTop: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"reply-to-comment-box\",\n      value: replyCommentToPost,\n      placeholder: \"Reply to this comment...\",\n      onChange: changeReplyCommentToPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"reply-to-comment-button\",\n      onClick: handleReplyToCommentButton,\n      children: \"Reply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"comment-author\",\n      children: [\"Author : \", props.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"comment-contents\",\n      children: [\"Comment : \", props.comment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Comment, \"F42mIQMmoxTw1G3PukEIdoAMbZY=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","jsxDEV","_jsxDEV","Comment","props","_s","console","log","post","comment","id","replyCommentToPost","setReplyCommentToPost","handleReplyToCommentButton","postId","commentId","fetch","method","headers","body","JSON","stringify","author","parentPost","idOfParentPost","level","idOfParentComment","changeReplyCommentToPost","event","target","value","style","marginLeft","marginTop","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/frank/Desktop/Projects/Boxing Forum Website/client/src/components/Posts/Comment/Comment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport \"./Comment.css\";\r\n\r\n\r\nconst Comment = (props) => {\r\n    // {post, author, comment, level, id }\r\n    console.log(props.post);\r\n    console.log(\"comment \", props.comment);\r\n    console.log(\"id \", props.id);\r\n\r\n    const [replyCommentToPost, setReplyCommentToPost] = useState(\"\");\r\n\r\n\r\n    const handleReplyToCommentButton = () => {\r\n\r\n        const postId = props.post;\r\n        const commentId = props.id;\r\n\r\n        console.log(\"post Id \", postId);\r\n        console.log(\"comment Id \", commentId);\r\n\r\n        fetch(`http://localhost:3001/post/${postId}/${commentId}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // Add other headers here if necessary, like Authorization\r\n            },\r\n            body: JSON.stringify({\r\n                author: props.author,\r\n                comment: replyCommentToPost,\r\n\r\n                parentPost : props.parentPost,\r\n\r\n                idOfParentPost: props.post,\r\n                level: props.level + 1,\r\n                idOfParentComment: props.id,\r\n            }),\r\n        });\r\n        \r\n\r\n    };\r\n\r\n    const changeReplyCommentToPost = (event) => {\r\n        setReplyCommentToPost(event.target.value);\r\n    };\r\n\r\n    return (\r\n\r\n        <div style={{ marginLeft: props.level * 20 + 'px', marginTop: '10px' }}>\r\n            <input type=\"text\" id=\"reply-to-comment-box\" value={replyCommentToPost}\r\n                placeholder=\"Reply to this comment...\" onChange={changeReplyCommentToPost}></input>\r\n            <button id=\"reply-to-comment-button\" onClick={handleReplyToCommentButton}>Reply</button>\r\n\r\n            <div id=\"comment-author\">Author : {props.author}</div>\r\n            <div id=\"comment-contents\">Comment : {props.comment}</div>\r\n\r\n            {/* <button id=\"reply-to-comment-button\">Reply</button> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}