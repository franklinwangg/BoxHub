{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Desktop\\\\Projects\\\\Boxing Forum Website\\\\client\\\\src\\\\components\\\\Posts\\\\Comment\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Comment.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = props => {\n  _s();\n  const [replyCommentToPost, setReplyCommentToPost] = useState(\"\");\n  const [showReplyButton, setShowReplyButton] = useState(false);\n\n  // const handleReplyToCommentButton = async () => {\n  //     const postId = props.post;\n  //     const commentId = props.id;\n\n  //     try {\n  //         const response = await fetch(`http://localhost:3001/post/${postId}/${commentId}`, {\n  //             method: \"POST\",\n  //             headers: {\n  //                 \"Content-Type\": \"application/json\",\n  //             },\n  //             body: JSON.stringify({\n  //                 author: props.author,\n  //                 comment: replyCommentToPost,\n  //                 parentPost: props.parentPost,\n  //                 idOfParentPost: props.post,\n  //                 level: props.level + 1,\n  //                 idOfParentComment: props.id,\n  //             }),\n  //         });\n\n  //         if (response.ok) {\n  //             setReplyCommentToPost(\"\"); \n  //         } else {\n  //             console.error(\"Failed to post reply\");\n  //         }\n  //     } catch (error) {\n  //         console.error(\"Error posting reply:\", error);\n  //     }\n  // };\n\n  const changeReplyCommentToPost = event => {\n    setReplyCommentToPost(event.target.value);\n  };\n  const handleClickReplyButton = () => {\n    setShowReplyButton(true);\n  };\n  const handleClickSubmitReplyButton = async post => {\n    const postId = props.post;\n    const commentId = props.id;\n    try {\n      console.log(\"0\");\n      const response = await fetch(`http://localhost:3001/post/${postId}/${commentId}`, {\n        //http://localhost:3001/post/66b3325ee60478ece541889f/66c641c82426a949c4d7c132\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          author: props.author,\n          comment: replyCommentToPost,\n          parentPost: props.parentPost,\n          idOfParentPost: props.post,\n          level: props.level + 1,\n          idOfParentComment: props.id\n        })\n      });\n      console.log(\"0.5\");\n      if (response.ok) {\n        console.log(\"1\");\n        setReplyCommentToPost(\"\"); // Clear input after successful post\n        const originalPost = props.post;\n        originalPost.handleReplySubmission();\n        setReplyCommentToPost(\"\");\n      } else {\n        console.error(\"Failed to post reply\");\n      }\n    } catch (error) {\n      console.error(\"Error posting reply:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-container\",\n    style: {\n      marginLeft: props.level * 20 + 'px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-author\",\n        children: [\"Author: \", props.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-contents\",\n        children: props.comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reply-section\",\n      children: [showReplyButton && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"reply-input\",\n          value: replyCommentToPost,\n          placeholder: \"Reply to this comment...\",\n          onChange: changeReplyCommentToPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-reply-button\",\n          onClick: handleClickSubmitReplyButton,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), !showReplyButton && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reply-button\",\n        onClick: handleClickReplyButton,\n        children: \"Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(Comment, \"Rc06e1tB348jyeAWqnw174y1Cac=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Comment","props","_s","replyCommentToPost","setReplyCommentToPost","showReplyButton","setShowReplyButton","changeReplyCommentToPost","event","target","value","handleClickReplyButton","handleClickSubmitReplyButton","post","postId","commentId","id","console","log","response","fetch","method","headers","body","JSON","stringify","author","comment","parentPost","idOfParentPost","level","idOfParentComment","ok","originalPost","handleReplySubmission","error","className","style","marginLeft","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/frank/Desktop/Projects/Boxing Forum Website/client/src/components/Posts/Comment/Comment.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport \"./Comment.css\";\r\n\r\nconst Comment = (props) => {\r\n    const [replyCommentToPost, setReplyCommentToPost] = useState(\"\");\r\n    const [showReplyButton, setShowReplyButton] = useState(false);\r\n\r\n    // const handleReplyToCommentButton = async () => {\r\n    //     const postId = props.post;\r\n    //     const commentId = props.id;\r\n\r\n    //     try {\r\n    //         const response = await fetch(`http://localhost:3001/post/${postId}/${commentId}`, {\r\n    //             method: \"POST\",\r\n    //             headers: {\r\n    //                 \"Content-Type\": \"application/json\",\r\n    //             },\r\n    //             body: JSON.stringify({\r\n    //                 author: props.author,\r\n    //                 comment: replyCommentToPost,\r\n    //                 parentPost: props.parentPost,\r\n    //                 idOfParentPost: props.post,\r\n    //                 level: props.level + 1,\r\n    //                 idOfParentComment: props.id,\r\n    //             }),\r\n    //         });\r\n\r\n    //         if (response.ok) {\r\n    //             setReplyCommentToPost(\"\"); \r\n    //         } else {\r\n    //             console.error(\"Failed to post reply\");\r\n    //         }\r\n    //     } catch (error) {\r\n    //         console.error(\"Error posting reply:\", error);\r\n    //     }\r\n    // };\r\n\r\n    const changeReplyCommentToPost = (event) => {\r\n        setReplyCommentToPost(event.target.value);\r\n    };\r\n\r\n    const handleClickReplyButton = () => {\r\n        setShowReplyButton(true);\r\n    };\r\n\r\n    const handleClickSubmitReplyButton = async (post) => {\r\n        const postId = props.post;\r\n        const commentId = props.id;\r\n\r\n        try {\r\n            console.log(\"0\");\r\n            const response = await fetch(`http://localhost:3001/post/${postId}/${commentId}`, {\r\n                //http://localhost:3001/post/66b3325ee60478ece541889f/66c641c82426a949c4d7c132\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    author: props.author,\r\n                    comment: replyCommentToPost,\r\n                    parentPost: props.parentPost,\r\n                    idOfParentPost: props.post,\r\n                    level: props.level + 1,\r\n                    idOfParentComment: props.id,\r\n                }),\r\n            });\r\n\r\n            console.log(\"0.5\");\r\n            if (response.ok) {\r\n                console.log(\"1\");\r\n                setReplyCommentToPost(\"\"); // Clear input after successful post\r\n                const originalPost = props.post;\r\n                originalPost.handleReplySubmission();\r\n                setReplyCommentToPost(\"\");\r\n\r\n            } else {\r\n                console.error(\"Failed to post reply\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error posting reply:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"comment-container\" style={{ marginLeft: props.level * 20 + 'px' }}>\r\n            <div className=\"comment-box\">\r\n                <div className=\"comment-author\">Author: {props.author}</div>\r\n                <div className=\"comment-contents\">{props.comment}</div>\r\n            </div>\r\n\r\n\r\n            <div className=\"reply-section\">\r\n                {showReplyButton && (\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"reply-input\"\r\n                            value={replyCommentToPost}\r\n                            placeholder=\"Reply to this comment...\"\r\n                            onChange={changeReplyCommentToPost}\r\n                        />\r\n\r\n                        <button className=\"submit-reply-button\" onClick={handleClickSubmitReplyButton}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                )\r\n                }\r\n\r\n                {!showReplyButton && (\r\n                    <button className=\"reply-button\" onClick={handleClickReplyButton}>\r\n                        Reply\r\n                    </button>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}