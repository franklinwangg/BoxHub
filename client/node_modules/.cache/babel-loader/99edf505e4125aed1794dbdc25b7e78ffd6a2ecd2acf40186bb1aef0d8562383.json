{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Desktop\\\\Projects\\\\Boxing Forum Website\\\\boxing-forum\\\\client\\\\src\\\\components\\\\Posts\\\\Post\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [comments, setComments] = useState([]);\n  const [commentToPost, setCommentToPost] = useState(\"\");\n  // const [commentToPost, setCommentToPost] = useState(\"\");\n\n  useEffect(() => {\n    const postId = location.state._id;\n    const fetchComments = async () => {\n      // const fetchedComments = (await fetch(`http://localhost:3001/post/${postId}/comments`)).json();\n\n      // const commentsArray = Array.isArray(fetchedComments) ? fetchedComments : [fetchedComments];\n      // console.log(\"FETCHED COMMENTS: \");\n      // console.log(fetchedComments);\n\n      // console.log(\"COMMENTS ARRAY : \");\n      // for(let i = 0; i < commentsArray.length; i ++) {\n      //     console.log(i, \" : \", commentsArray[i]);\n      // }\n      const fetchedComments = await fetch(`http://localhost:3001/post/${postId}/comments`);\n      const resolvedFetchedComments = await fetchedComments.json();\n      const commentsArray = Array.isArray(resolvedFetchedComments) ? resolvedFetchedComments : [resolvedFetchedComments];\n      console.log(\"FETCHED COMMENTS: \");\n      console.log(fetchedComments);\n      console.log(\"fetched comments array length : \", commentsArray.length);\n      console.log(\"COMMENTS ARRAY : \");\n      for (let i = 0; i < commentsArray.length; i++) {\n        console.log(i, \" : \", commentsArray[i]);\n      }\n      setComments(commentsArray);\n    };\n    fetchComments();\n  }, []);\n  const handleSubmitCommentButton = () => {\n    const author = \"temp\";\n    const comment = commentToPost;\n    const idOfParentPost = location.state._id;\n\n    // /:id/postComment/comments\n\n    fetch(\"http://localhost:3001/postComment\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        author: author,\n        comment: comment,\n        idOfParentPost: idOfParentPost\n      })\n    });\n    console.log(\"passed\");\n  };\n  const changeCommentToPost = event => {\n    setCommentToPost(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"post-title-and-description-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"post-title-div\",\n        children: location.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"post-description-div\",\n        children: location.state.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"post-new-comment-box\",\n      value: commentToPost,\n      placeholder: \"Post comment here\",\n      onChange: changeCommentToPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"submit-comment-button\",\n      onClick: handleSubmitCommentButton,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"COMMENTS SIZE : \", comments.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: comment.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(Post, \"rx9qN91ugZou3AZzVH04DPSV7bM=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","jsxDEV","_jsxDEV","Post","_s","navigate","location","comments","setComments","commentToPost","setCommentToPost","postId","state","_id","fetchComments","fetchedComments","fetch","resolvedFetchedComments","json","commentsArray","Array","isArray","console","log","length","i","handleSubmitCommentButton","author","comment","idOfParentPost","method","headers","body","JSON","stringify","changeCommentToPost","event","target","value","children","id","title","fileName","_jsxFileName","lineNumber","columnNumber","description","type","placeholder","onChange","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/frank/Desktop/Projects/Boxing Forum Website/boxing-forum/client/src/components/Posts/Post/Post.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nfunction Post() {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [comments, setComments] = useState([]);\r\n    const [commentToPost, setCommentToPost] = useState(\"\");\r\n    // const [commentToPost, setCommentToPost] = useState(\"\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const postId = location.state._id;\r\n        const fetchComments = async () => {\r\n            // const fetchedComments = (await fetch(`http://localhost:3001/post/${postId}/comments`)).json();\r\n\r\n            // const commentsArray = Array.isArray(fetchedComments) ? fetchedComments : [fetchedComments];\r\n            // console.log(\"FETCHED COMMENTS: \");\r\n            // console.log(fetchedComments);\r\n\r\n            // console.log(\"COMMENTS ARRAY : \");\r\n            // for(let i = 0; i < commentsArray.length; i ++) {\r\n            //     console.log(i, \" : \", commentsArray[i]);\r\n            // }\r\n            const fetchedComments = await fetch(`http://localhost:3001/post/${postId}/comments`);\r\n            const resolvedFetchedComments = await fetchedComments.json();\r\n\r\n            const commentsArray = Array.isArray(resolvedFetchedComments) ? resolvedFetchedComments : [resolvedFetchedComments];\r\n\r\n            console.log(\"FETCHED COMMENTS: \");\r\n            console.log(fetchedComments);\r\n\r\n            console.log(\"fetched comments array length : \", commentsArray.length);\r\n            console.log(\"COMMENTS ARRAY : \");\r\n            for(let i = 0; i < commentsArray.length; i ++) {\r\n                console.log(i, \" : \", commentsArray[i]);\r\n            }\r\n            setComments(commentsArray);\r\n        };\r\n        fetchComments();\r\n    }, []);\r\n\r\n    const handleSubmitCommentButton = () => {\r\n\r\n        const author = \"temp\";\r\n        const comment = commentToPost;\r\n        const idOfParentPost = location.state._id;\r\n\r\n\r\n        // /:id/postComment/comments\r\n\r\n        fetch(\"http://localhost:3001/postComment\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                author: author,\r\n                comment: comment,\r\n                idOfParentPost: idOfParentPost\r\n            })\r\n        });\r\n\r\n        console.log(\"passed\");\r\n\r\n    };\r\n\r\n    const changeCommentToPost = (event) => {\r\n        setCommentToPost(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"post-title-and-description-section\">\r\n                <div id=\"post-title-div\">{location.state.title}</div>\r\n                <div id=\"post-description-div\">{location.state.description}</div>\r\n            </div>\r\n\r\n\r\n            <input type=\"text\" id=\"post-new-comment-box\" value={commentToPost}\r\n                placeholder=\"Post comment here\" onChange={changeCommentToPost}></input>\r\n            <button id=\"submit-comment-button\" onClick={handleSubmitCommentButton}>Submit</button>\r\n\r\n            <div>\r\n                <div>COMMENTS SIZE : {comments.length}</div>\r\n                \r\n\r\n                {comments.map((comment) => {\r\n                    return (\r\n                        <div key={comment._id}>\r\n                            <h2>{comment.author}</h2>\r\n                            <p>{comment.comment}</p>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}