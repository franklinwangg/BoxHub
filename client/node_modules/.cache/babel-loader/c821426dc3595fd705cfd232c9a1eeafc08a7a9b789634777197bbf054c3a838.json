{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Desktop\\\\Projects\\\\Boxing Forum Website\\\\client\\\\src\\\\components\\\\Posts\\\\Comment\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport \"./Comment.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = props => {\n  _s();\n  // {post, author, comment, level, id }\n\n  const [replyCommentToPost, setReplyCommentToPost] = useState(\"\");\n  const handleReplyToCommentButton = () => {\n    const postId = props.post;\n    const commentId = props.id;\n    fetch(`http://localhost:3001/post/${postId}/${commentId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // Add other headers here if necessary, like Authorization\n      },\n      body: JSON.stringify({\n        author: props.author,\n        comment: replyCommentToPost,\n        parentPost: props.parentPost,\n        idOfParentPost: props.post,\n        level: props.level + 1,\n        idOfParentComment: props.id\n      })\n    });\n  };\n  const changeReplyCommentToPost = event => {\n    setReplyCommentToPost(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: props.level * 20 + 'px',\n      marginTop: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"reply-to-comment-box\",\n      value: replyCommentToPost,\n      placeholder: \"Reply to this comment...\",\n      onChange: changeReplyCommentToPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"reply-to-comment-button\",\n      onClick: handleReplyToCommentButton,\n      children: \"Reply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"comment-author\",\n      children: [\"Author : \", props.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"comment-contents\",\n      children: [\"Comment : \", props.comment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Comment, \"F42mIQMmoxTw1G3PukEIdoAMbZY=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","jsxDEV","_jsxDEV","Comment","props","_s","replyCommentToPost","setReplyCommentToPost","handleReplyToCommentButton","postId","post","commentId","id","fetch","method","headers","body","JSON","stringify","author","comment","parentPost","idOfParentPost","level","idOfParentComment","changeReplyCommentToPost","event","target","value","style","marginLeft","marginTop","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/frank/Desktop/Projects/Boxing Forum Website/client/src/components/Posts/Comment/Comment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport \"./Comment.css\";\r\n\r\n\r\nconst Comment = (props) => {\r\n    // {post, author, comment, level, id }\r\n\r\n    const [replyCommentToPost, setReplyCommentToPost] = useState(\"\");\r\n\r\n\r\n    const handleReplyToCommentButton = () => {\r\n\r\n        const postId = props.post;\r\n        const commentId = props.id;\r\n\r\n        fetch(`http://localhost:3001/post/${postId}/${commentId}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // Add other headers here if necessary, like Authorization\r\n            },\r\n            body: JSON.stringify({\r\n                author: props.author,\r\n                comment: replyCommentToPost,\r\n\r\n                parentPost : props.parentPost,\r\n\r\n                idOfParentPost: props.post,\r\n                level: props.level + 1,\r\n                idOfParentComment: props.id,\r\n            }),\r\n        });\r\n        \r\n\r\n    };\r\n\r\n    const changeReplyCommentToPost = (event) => {\r\n        setReplyCommentToPost(event.target.value);\r\n    };\r\n\r\n    return (\r\n\r\n        <div style={{ marginLeft: props.level * 20 + 'px', marginTop: '10px' }}>\r\n            <input type=\"text\" id=\"reply-to-comment-box\" value={replyCommentToPost}\r\n                placeholder=\"Reply to this comment...\" onChange={changeReplyCommentToPost}></input>\r\n            <button id=\"reply-to-comment-button\" onClick={handleReplyToCommentButton}>Reply</button>\r\n\r\n            <div id=\"comment-author\">Author : {props.author}</div>\r\n            <div id=\"comment-contents\">Comment : {props.comment}</div>\r\n\r\n            {/* <button id=\"reply-to-comment-button\">Reply</button> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvB,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB;;EAEA,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAGhE,MAAMY,0BAA0B,GAAGA,CAAA,KAAM;IAErC,MAAMC,MAAM,GAAGL,KAAK,CAACM,IAAI;IACzB,MAAMC,SAAS,GAAGP,KAAK,CAACQ,EAAE;IAE1BC,KAAK,CAAC,8BAA8BJ,MAAM,IAAIE,SAAS,EAAE,EAAE;MACvDG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;QAChB;MACJ,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,MAAM,EAAEf,KAAK,CAACe,MAAM;QACpBC,OAAO,EAAEd,kBAAkB;QAE3Be,UAAU,EAAGjB,KAAK,CAACiB,UAAU;QAE7BC,cAAc,EAAElB,KAAK,CAACM,IAAI;QAC1Ba,KAAK,EAAEnB,KAAK,CAACmB,KAAK,GAAG,CAAC;QACtBC,iBAAiB,EAAEpB,KAAK,CAACQ;MAC7B,CAAC;IACL,CAAC,CAAC;EAGN,CAAC;EAED,MAAMa,wBAAwB,GAAIC,KAAK,IAAK;IACxCnB,qBAAqB,CAACmB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7C,CAAC;EAED,oBAEI1B,OAAA;IAAK2B,KAAK,EAAE;MAAEC,UAAU,EAAE1B,KAAK,CAACmB,KAAK,GAAG,EAAE,GAAG,IAAI;MAAEQ,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnE9B,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACrB,EAAE,EAAC,sBAAsB;MAACgB,KAAK,EAAEtB,kBAAmB;MACnE4B,WAAW,EAAC,0BAA0B;MAACC,QAAQ,EAAEV;IAAyB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvFrC,OAAA;MAAQU,EAAE,EAAC,yBAAyB;MAAC4B,OAAO,EAAEhC,0BAA2B;MAAAwB,QAAA,EAAC;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAExFrC,OAAA;MAAKU,EAAE,EAAC,gBAAgB;MAAAoB,QAAA,GAAC,WAAS,EAAC5B,KAAK,CAACe,MAAM;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtDrC,OAAA;MAAKU,EAAE,EAAC,kBAAkB;MAAAoB,QAAA,GAAC,YAAU,EAAC5B,KAAK,CAACgB,OAAO;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGzD,CAAC;AAEd,CAAC;AAAClC,EAAA,CAjDIF,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AAmDb,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}