{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Desktop\\\\Projects\\\\Boxing Forum Website\\\\client\\\\src\\\\components\\\\Posts\\\\Comment\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport \"./Comment.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = props => {\n  _s();\n  // {post, author, comment, level, id }\n  console.log(props.post);\n  console.log(\"comment \", props.comment);\n  console.log(\"id \", props.id);\n  const [replyCommentToPost, setReplyCommentToPost] = useState(\"\");\n  const handleReplyToCommentButton = () => {\n\n    // const postId = this.props.post._id;\n    // const commentId = this.props.id;\n    // fetch(`http://localhost:3001/post/${postId}/${commentId}`,\n    //     {\n    //         method: \"POST\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //             // Add other headers here if necessary, like Authorization\n    //         },\n    //         body: {\n    //             // author, comment, idOfParentPost,\n    //             // level, idOfParentComment, createdAt: formattedDate\n    //             author: author,\n    //             comment: replyCommentToPost,\n    //             idOfParentPost: post._id,\n    //             level: level + 1,\n    //             idOfParentComment: id,\n    //         },\n    //     }\n    // )\n  };\n  const changeReplyCommentToPost = event => {\n    setReplyCommentToPost(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"reply-to-comment-box\",\n      value: replyCommentToPost,\n      placeholder: \"Reply to this comment...\",\n      onChange: changeReplyCommentToPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"reply-to-comment-button\",\n      onClick: handleReplyToCommentButton,\n      children: \"Reply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"comment-author\",\n      children: [\"Author : \", props.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"comment-contents\",\n      children: [\"Comment : \", props.comment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Comment, \"F42mIQMmoxTw1G3PukEIdoAMbZY=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","jsxDEV","_jsxDEV","Comment","props","_s","console","log","post","comment","id","replyCommentToPost","setReplyCommentToPost","handleReplyToCommentButton","changeReplyCommentToPost","event","target","value","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","author","_c","$RefreshReg$"],"sources":["C:/Users/frank/Desktop/Projects/Boxing Forum Website/client/src/components/Posts/Comment/Comment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport \"./Comment.css\";\r\n\r\n\r\nconst Comment = (props) => {\r\n    // {post, author, comment, level, id }\r\n    console.log(props.post);\r\n    console.log(\"comment \", props.comment);\r\n    console.log(\"id \", props.id);\r\n\r\n    const [replyCommentToPost, setReplyCommentToPost] = useState(\"\");\r\n\r\n\r\n    const handleReplyToCommentButton = () => {\r\n\r\n        // const postId = this.props.post._id;\r\n        // const commentId = this.props.id;\r\n        // fetch(`http://localhost:3001/post/${postId}/${commentId}`,\r\n        //     {\r\n        //         method: \"POST\",\r\n        //         headers: {\r\n        //             \"Content-Type\": \"application/json\",\r\n        //             // Add other headers here if necessary, like Authorization\r\n        //         },\r\n        //         body: {\r\n        //             // author, comment, idOfParentPost,\r\n        //             // level, idOfParentComment, createdAt: formattedDate\r\n        //             author: author,\r\n        //             comment: replyCommentToPost,\r\n        //             idOfParentPost: post._id,\r\n        //             level: level + 1,\r\n        //             idOfParentComment: id,\r\n        //         },\r\n        //     }\r\n        // )\r\n\r\n    };\r\n\r\n    const changeReplyCommentToPost = (event) => {\r\n        setReplyCommentToPost(event.target.value);\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n\r\n            <input type=\"text\" id=\"reply-to-comment-box\" value={replyCommentToPost}\r\n                placeholder=\"Reply to this comment...\" onChange={changeReplyCommentToPost}></input>\r\n            <button id=\"reply-to-comment-button\" onClick={handleReplyToCommentButton}>Reply</button>\r\n\r\n            <div id=\"comment-author\">Author : {props.author}</div>\r\n            <div id=\"comment-contents\">Comment : {props.comment}</div>\r\n\r\n            {/* <button id=\"reply-to-comment-button\">Reply</button> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvB,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB;EACAC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACI,IAAI,CAAC;EACvBF,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,KAAK,CAACK,OAAO,CAAC;EACtCH,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEH,KAAK,CAACM,EAAE,CAAC;EAE5B,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAGhE,MAAMiB,0BAA0B,GAAGA,CAAA,KAAM;;IAErC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CAEH;EAED,MAAMC,wBAAwB,GAAIC,KAAK,IAAK;IACxCH,qBAAqB,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7C,CAAC;EAED,oBAGIf,OAAA;IAAAgB,QAAA,gBAEIhB,OAAA;MAAOiB,IAAI,EAAC,MAAM;MAACT,EAAE,EAAC,sBAAsB;MAACO,KAAK,EAAEN,kBAAmB;MACnES,WAAW,EAAC,0BAA0B;MAACC,QAAQ,EAAEP;IAAyB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvFvB,OAAA;MAAQQ,EAAE,EAAC,yBAAyB;MAACgB,OAAO,EAAEb,0BAA2B;MAAAK,QAAA,EAAC;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAExFvB,OAAA;MAAKQ,EAAE,EAAC,gBAAgB;MAAAQ,QAAA,GAAC,WAAS,EAACd,KAAK,CAACuB,MAAM;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtDvB,OAAA;MAAKQ,EAAE,EAAC,kBAAkB;MAAAQ,QAAA,GAAC,YAAU,EAACd,KAAK,CAACK,OAAO;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGzD,CAAC;AAEd,CAAC;AAACpB,EAAA,CArDIF,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAuDb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}