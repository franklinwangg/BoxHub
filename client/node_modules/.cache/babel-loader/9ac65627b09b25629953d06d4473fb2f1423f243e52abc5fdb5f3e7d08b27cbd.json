{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Desktop\\\\Projects\\\\Boxing Forum Website\\\\client\\\\src\\\\components\\\\Posts\\\\Post\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Comment from '../Comment/Comment';\nimport UserContext from '../../../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = () => {\n  _s();\n  const location = useLocation();\n  const [comments, setComments] = useState([]);\n  const {\n    username,\n    setUsername\n  } = useContext(UserContext);\n  const [commentToPost, setCommentToPost] = useState(\"\");\n  useEffect(() => {\n    const fetchAndSortComments = async () => {\n      const fetchedComments = await fetchComments();\n      const sortedComments = sortCommentsOnLevel(fetchedComments);\n      setComments(sortedComments);\n    };\n    fetchAndSortComments();\n  }, []);\n  const handleSubmitCommentButton = () => {\n    const author = username;\n    const comment = commentToPost;\n    const idOfParentPost = location.state._id;\n    fetch(\"http://localhost:3001/postComment\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        author: author,\n        comment: comment,\n        idOfParentPost: idOfParentPost,\n        level: 0\n      })\n    });\n  };\n  const changeCommentToPost = event => {\n    setCommentToPost(event.target.value);\n  };\n  const fetchComments = async () => {\n    try {\n      // console.log(\"hi\");\n      const postId = location.state._id;\n      const response = await fetch(`http://localhost:3001/post/${postId}/comments`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(\"Error fetching comments : \", error);\n    }\n  };\n  const sortCommentsOnLevel = dataComments => {\n    // sort the comments on order, so all 0's in front, then 1's, etc\n    const sortedDataComments = dataComments.sort((firstComment, secondComment) => {\n      if (firstComment.level > secondComment.level) {\n        return 1;\n      } else if (firstComment.level === secondComment.level) {\n        return 0;\n      } else return -1;\n    });\n    return sortedDataComments;\n  };\n  const renderComment = comment => {\n    // if this is level 0, then render it right away\n    console.log(comment);\n    console.log(\"comment : \", comment.comment);\n    if (comment.level === 0) {\n      console.log(\"continued rendering\");\n      return /*#__PURE__*/_jsxDEV(Comment, {\n        author: comment.author,\n        comment: comment.comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this);\n    }\n\n    // first find parent comment of this comment\n    // somehow render this so that this is the child comment underneath the parent comment\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"post-title-and-description-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"post-title-div\",\n        children: location.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"post-description-div\",\n        children: location.state.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"post-new-comment-box\",\n      value: commentToPost,\n      placeholder: \"Post comment here\",\n      onChange: changeCommentToPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"submit-comment-button\",\n      onClick: handleSubmitCommentButton,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"comments-section\",\n      children: comments.map(comment => {\n        return renderComment(comment);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"0O4zjQzmahGyb+2O5spWaxcjpXk=\", false, function () {\n  return [useLocation];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useLocation","Comment","UserContext","jsxDEV","_jsxDEV","Post","_s","location","comments","setComments","username","setUsername","commentToPost","setCommentToPost","fetchAndSortComments","fetchedComments","fetchComments","sortedComments","sortCommentsOnLevel","handleSubmitCommentButton","author","comment","idOfParentPost","state","_id","fetch","method","headers","body","JSON","stringify","level","changeCommentToPost","event","target","value","postId","response","data","json","error","console","log","dataComments","sortedDataComments","sort","firstComment","secondComment","renderComment","fileName","_jsxFileName","lineNumber","columnNumber","children","id","title","description","type","placeholder","onChange","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/frank/Desktop/Projects/Boxing Forum Website/client/src/components/Posts/Post/Post.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useLocation} from 'react-router-dom';\r\nimport Comment from '../Comment/Comment';\r\nimport UserContext from '../../../context/UserContext';\r\n\r\n\r\nconst Post = () => {\r\n\r\n    const location = useLocation();\r\n    const [comments, setComments] = useState([]);\r\n\r\n    const {username, setUsername} = useContext(UserContext);\r\n    const [commentToPost, setCommentToPost] = useState(\"\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchAndSortComments = async () => {\r\n            const fetchedComments = await fetchComments();\r\n            const sortedComments = sortCommentsOnLevel(fetchedComments);\r\n            setComments(sortedComments);\r\n        };\r\n\r\n        fetchAndSortComments();\r\n    }, []);\r\n\r\n\r\n    const handleSubmitCommentButton = () => {\r\n\r\n        const author = username;\r\n\r\n        const comment = commentToPost;\r\n        const idOfParentPost = location.state._id;\r\n\r\n\r\n\r\n        fetch(\"http://localhost:3001/postComment\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                author: author,\r\n                comment: comment,\r\n                idOfParentPost: idOfParentPost,\r\n                level : 0\r\n            })\r\n        });\r\n\r\n    };\r\n\r\n    const changeCommentToPost = (event) => {\r\n        setCommentToPost(event.target.value);\r\n    };\r\n\r\n    const fetchComments = async () => {\r\n        try {\r\n            // console.log(\"hi\");\r\n            const postId = location.state._id;\r\n\r\n            const response = await fetch(`http://localhost:3001/post/${postId}/comments`); \r\n            const data = await response.json();\r\n            return data;\r\n        }\r\n        catch (error) {\r\n            console.log(\"Error fetching comments : \", error);\r\n        }\r\n    };\r\n\r\n    const sortCommentsOnLevel = (dataComments) => {\r\n        // sort the comments on order, so all 0's in front, then 1's, etc\r\n        const sortedDataComments = dataComments.sort((firstComment, secondComment) => {\r\n            if (firstComment.level > secondComment.level) {\r\n                return 1;\r\n            }\r\n            else if (firstComment.level === secondComment.level) {\r\n                return 0;\r\n            }\r\n            else return -1;\r\n        });\r\n        return sortedDataComments;\r\n    }\r\n\r\n    const renderComment = (comment) => {\r\n        // if this is level 0, then render it right away\r\n        console.log(comment);\r\n        console.log(\"comment : \", comment.comment);\r\n        if(comment.level === 0) {\r\n            console.log(\"continued rendering\");\r\n            return (\r\n                <Comment author = {comment.author} comment = {comment.comment} />\r\n            );\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        // first find parent comment of this comment\r\n        // somehow render this so that this is the child comment underneath the parent comment\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div id=\"post-title-and-description-section\">\r\n                <div id=\"post-title-div\">{location.state.title}</div>\r\n                <div id=\"post-description-div\">{location.state.description}</div>\r\n            </div>\r\n\r\n            <input type=\"text\" id=\"post-new-comment-box\" value={commentToPost}\r\n                placeholder=\"Post comment here\" onChange={changeCommentToPost}></input>\r\n            <button id=\"submit-comment-button\" onClick={handleSubmitCommentButton}>Submit</button>\r\n    \r\n\r\n            <div id=\"comments-section\">\r\n                {comments.map((comment) => {\r\n                    return renderComment(comment);\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}